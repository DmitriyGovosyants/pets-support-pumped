{"version":3,"file":"static/js/notices-page.2287acbd.chunk.js","mappings":"sSAGaA,EAAUC,EAAAA,EAAAA,IAAH,4MAMhBC,EAAAA,GAAAA,WAGAA,EAAAA,GAAAA,Q,UCyCJ,EApCoB,WAClB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACzB,GAA8BC,EAAAA,EAAAA,UAASH,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,SAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACMC,GAAWT,EAAAA,EAAAA,IAAYU,EAAAA,IAC7B,GAAwCR,EAAAA,EAAAA,WAAS,GAAjD,eAAOS,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WACJJ,IACFE,GAASG,EAAAA,EAAAA,IAAoBP,IAC7BG,GAAgB,GAEnB,GAAE,CAACC,EAAUF,EAAcF,KAG1B,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,sCACA,SAAC,KAAD,CACEN,QAASA,EACTC,WAAYA,EACZI,QAASA,EACTF,SAAUA,KAEZ,UAACV,EAAD,YACE,SAAC,KAAD,CAAsBQ,WAAYA,KAClC,SAAC,KAAD,QAEF,SAAC,KAAD,CAAuBG,KAAMA,EAAMF,MAAOA,EAAOG,QAASA,QAIjE,C","sources":["pages/NoticesPage/NoticesPage.styled.js","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { device } from 'styles/mediaquery';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: start;\n  margin-bottom: 30px;\n\n  ${device.mobileOnly} {\n    position: relative;\n  }\n  ${device.tablet} {\n    margin-bottom: 60px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectCategory } from 'redux/categorySlice';\nimport { selectKeyWord } from 'redux/filterSlice';\nimport { fromCategoryToRoute } from 'helpers';\nimport {\n  Section,\n  Container,\n  NoticesSearch,\n  NoticesCategoriesNav,\n  AddNoticeButton,\n  MainTitle,\n  NoticesCategoriesList,\n} from 'components';\nimport { Wrapper } from './NoticesPage.styled';\n\nconst NoticesPage = () => {\n  const word = useSelector(selectKeyWord);\n  const [keyWord, setKeyWord] = useState(word);\n  const [field, setField] = useState('title');\n  const [page, setPage] = useState(1);\n  const selected = useSelector(selectCategory);\n  const [isFirstMount, setIsFirstMount] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isFirstMount) {\n      navigate(fromCategoryToRoute(selected));\n      setIsFirstMount(false);\n    }\n  }, [navigate, isFirstMount, selected]);\n\n  return (\n    <Section>\n      <Container>\n        <MainTitle>Find your favorite pet</MainTitle>\n        <NoticesSearch\n          keyWord={keyWord}\n          setKeyWord={setKeyWord}\n          setPage={setPage}\n          setField={setField}\n        />\n        <Wrapper>\n          <NoticesCategoriesNav setKeyWord={setKeyWord} />\n          <AddNoticeButton />\n        </Wrapper>\n        <NoticesCategoriesList page={page} field={field} setPage={setPage} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["Wrapper","styled","device","word","useSelector","selectKeyWord","useState","keyWord","setKeyWord","field","setField","page","setPage","selected","selectCategory","isFirstMount","setIsFirstMount","navigate","useNavigate","useEffect","fromCategoryToRoute"],"sourceRoot":""}